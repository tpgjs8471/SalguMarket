<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.SalGuMarket.www.repository.MemberMapper">

	<select id="selectEmail" resultType="com.SalGuMarket.www.security.MemberVO">
  		select * from member where email=#{email}
  	</select>
  	<select id="selectAuths" resultType="com.SalGuMarket.www.security.AuthVO">
  		select * from auth_member where email=#{email}
  	</select>
  	<insert id="insert">
  		insert into member(name, email, pwd, nick_name, reg_email)
  		values (#{name}, #{email}, #{pwd}, #{nickName},#{regEmail})
  	</insert>
  	<insert id="insertAuthinit">
  		insert into auth_member values (#{email}, 'ROLE_USER')
  	</insert>
  	
  	<!-- 민지 -->
  	<select id="getList" resultType="com.SalGuMarket.www.security.MemberVO">
  		select * from member <include refid="search"></include> limit #{pageStart}, #{qty}
  	</select>
  	
  	<select id="getTotalCount" resultType="int">
		select count(email) from member
	</select>
	
	<delete id="remove">
		delete from member where email = #{email}
	</delete>
	
	<delete id="delete">
		delete from member where email = #{email}
	</delete>
	
	<update id="yesProfile">
		update member set is_profile='1' where email=#{email}
	</update>
	
	<update id="noProfile">
		update member set is_profile='0' where email=#{email}
	</update>
	
	<select id="getIsProfile" resultType="int">
		select is_profile from member where email=#{email}
	</select>

	<select id="selcetNickName" resultType="com.SalGuMarket.www.security.MemberVO">
  		select * from member where nick_name=#{nickName}
  	</select>
  	
  	<select id="check" resultType="com.SalGuMarket.www.security.MemberVO">
  		select * from member where name=#{name} and reg_email = #{regEmail}
  	</select>
  	
  	<select id="checkpw" resultType="int">
  		select count(*) from member where name=#{name} and email = #{email}
  	</select>
  	
  	<update id="updatePWD">
  		update member set pwd = #{pwd} where email = #{email}
  	</update>
  	
  	<select id="selectEmailTotalCount" resultType="int">
  		select count(bno) from board where email = #{email}
	</select>
	
	<select id="getBoardList" resultType="com.SalGuMarket.www.domain.BoardVO">
		select * from board where email=#{email} order by bno desc limit #{pgvo.pageStart}, #{pgvo.qty}
	</select>
	
	<select id="getHeart" resultType="com.SalGuMarket.www.domain.HeartVO">
		select * from heart where email=#{email}
	</select>
	
	<insert id="insertHeart">
  		insert into heart(email, bno)
  		values (#{email}, #{bno})
  	</insert>
	
	<select id="getHeartBoard" resultType="com.SalGuMarket.www.domain.BoardVO">
		select * from board where bno=#{bno} order by bno desc limit #{pgvo.pageStart}, #{pgvo.qty}
	</select>
	
	<select id="selectBnoTotalCount" resultType="int">
  		select count(bno) from heart where email = #{email}
	</select>
	
	<select id="hasHeart" resultType="com.SalGuMarket.www.domain.HeartVO">
  		select * from heart where email = #{email} and bno = #{bno}
	</select>
	
	<delete id="delHeart">
		delete from heart where email = #{email} and bno = #{bno}
	</delete>
	
	<sql id="search">
		<if test="type!=null">
			<trim prefix="order by" prefixOverrides="or">
				<foreach collection="typeToArray" item="type">
					<trim prefix="or">
						<choose>
							<when test="type=='l'.toString()">
									reg_at desc
							</when>
							<when test="type=='r'.toString()"> 
									report desc
							</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</if>
	</sql>

</mapper>